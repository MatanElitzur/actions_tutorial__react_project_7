name: Label Issues (Permissions Example)
on:
  issues: #This workflow runs on each new GitHub issue that is opened
    types:
      - opened
#permissions: for all job can be handle here, The github default is permissions granted
#When we add a permission, the default is changed so only the new permission is valid
#and the other permissions are not valid, not permitted
# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs 
jobs:
  assign-label:
    permissions:
      issues: write #We need write permissions to the issues in github to create the label
    #permissions: for a single job level can be handle here
    #permissions: read-all - get all the job can get alll the info from github
    #permissions: write-all - the job can update or create github values
    # https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs 
    runs-on: ubuntu-latest
    steps:
      - name: Assign label #Checks if the word bug exists in the issue title
        if: contains(github.event.issue.title, 'bug')
        run: |
          curl -X POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/labels \
          -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          -H 'content-type: application/json' \
          -d '{
              "labels": ["bug"]
            }' \
          --fail
        #This code create a bug label to this current isuue
        #The secrets.GITHUB_TOKEN is generated automatically by GiHub
        #The secrets.GITHUB_TOKEN is deleted after our jobs have done
        #So the scopes of the permissions are sent with secrets.GITHUB_TOKEN